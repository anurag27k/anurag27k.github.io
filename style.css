@import url("https://emoji-css.afeld.me/emoji.css");
html {
  scroll-behavior: smooth;
}

body {
  transition-timing-function: ease-in-out;
  transition: 0.5s;
  line-height: 1.5;
  background-color: #000;

  color: white;
  font-family: "Inter", sans-serif;
  /* cursor: url("./files/cursor1.png"), url(foo.cur), auto; */

  animation: fadeInAnimation ease 0.5s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@font-face {
  font-family: "Barlow";
  src: url("./fonts/Barlow/Barlow-Regular.ttf");
}

@font-face {
  font-family: "BarlowBold";
  src: url("./fonts/Barlow/Barlow-SemiBold.ttf");
}

@font-face {
  font-family: "Butler";
  src: url("./fonts/Butler/Butler-Black.woff");
}

@font-face {
  font-family: "Bright";
  src: url("./fonts/Bright\ DEMO.otf");
}

@font-face {
  font-family: "Grafier";
  src: url("./fonts/Grafier-BlackText.otf");
}

@font-face {
  font-family: "Hatton";
  src: url("./fonts/Hatton/PPHatton-Ultralight.otf");
}

@font-face {
  font-family: "NeueMontreal";
  src: url("./fonts/NeueMontreal/PPNeueMontreal-Book.otf");
}

@font-face {
  font-family: "Kalam";
  src: url("./fonts/Kalam/Kalam-Light.ttf");
}

h6 {
  font-family: "Barlow", sans-serif;
  letter-spacing: 0.02em;
  font-weight: 600;
  font-size: 12px;
}

h5 {
  font-family: "Barlow", sans-serif;
  line-height: 1.75;
  font-weight: 500;
  color: black;
  opacity: 0.7;
  font-size: 1rem;
}

h4 {
  font-size: 1.2rem;
}

h2 {
  font-family: "NeueMontreal", serif;
  font-size: 48px;
  font-weight: bolder;
  line-height: 1.3;
  color: lightgray;
}

h1 {
  font-family: "Hatton", serif;
  color: Black;
  font-size: 2rem;
}

p {
  font-size: 28px;
  font-family: "Barlow", serif;
}

.bolder {
  font-family: "BarlowBold", serif;
}

a,
a:hover {
  text-decoration: none;
  /* cursor: url("./files/cursor2.png"), url(foo.cur), auto; */
}

a:hover {
  border-bottom-width: 2px;
  border-bottom-style: solid;

  /* text-decoration: underline; */
}
.padding100 {
  padding-top: 50px;
  padding-bottom: 50px;
}

.fill {
  min-height: 100vh;
  height: 100vh;
}

.normalText {
  font-size: 20px;
}

.borderCurved {
  border-radius: 5px;
  /* box-shadow: 0px 0px 5px slategray; */
  /* -webkit-box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3);
            -moz-box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3);
            box-shadow: 0 15px 20px rgba(0, 0, 0, 0.3); */
}

.card {
  opacity: 0.7;
}

.card:hover {
  transition: all 0.4s;
  -webkit-transition: all 0.4s;
  /* box-shadow: 0px 0px 5px slategray; */
  opacity: 1;
  /* opacity: 0.5; */
}
.thickfont {
  font-family: "Inter", sans-serif;
}

/* new ones  */
.card-div {
  /* padding: 15px; */
  border-radius: 10px;
}
.hoverfn {
  opacity: 0.7;
  transition: 0.5s;
  transition-timing-function: ease-in-out;
}
.hoverfn:hover {
  transition: 0.5s;
  box-shadow: 0px 0px 50px lightgrey;
  opacity: 1;
  transform: scale(1.03);
  /* cursor: url("./files/cursor2.png"), url(foo.cur), auto; */
}
.hoverfnNoZoom {
  opacity: 0.5;
  transition: 0.5s;
  transition-timing-function: ease-in-out;
}
.hoverfnNoZoom:hover {
  transition: 0.5s;
  box-shadow: 0px 0px 50px lightgrey;
  opacity: 1;
  /* cursor: url("./files/cursor2.png"), url(foo.cur), auto; */
}
.pointerFix {
  /* cursor: url("./files/cursor2.png"), url(foo.cur), auto; */
}
.pointerFix:hover {
  /* cursor: url("./files/cursor2.png"), url(foo.cur), auto; */
}
.badger {
  background-color: black;
  opacity: 0.2;
  border-radius: 17px;
  width: fit-content;
  max-width: max-content;
  margin-top: 5px;
}
.badger-gray {
  background-color: white;
  opacity: 0.2;
  border-radius: 17px;
  width: fit-content;
  max-width: max-content;
  color: #000;
}
.card-subtext {
  padding: 5px;
  font-size: inherit;
  font-weight: 600;
}

.card-subtext-reco {
  padding: 5px;
  font-size: inherit;
  font-family: "Kalam", serif;
  font-weight: 600;
}

.card-maintext {
  font-family: "NeueMontreal", serif;
  font-size: 1.75rem;
}
.card-description {
  font-weight: 500;
  font-size: 1.1rem;
  opacity: 0.5;
}
ul {
  list-style: none;
  padding: 0;
}
td,
th {
  border: 1px solid #ccc;
  text-align: left;
  padding: 8px;
  color: #000;
}

tr:nth-child(even) {
  background-color: rgb(218, 232, 240);
}
table {
  border-radius: 10px;
}
th {
  background-color: #444;
  color: white;
}
.anim {
  animation: mymove 2s infinite;
}
@keyframes mymove {
  50% {
    transform: rotate(-30deg);
    transform: rotate(30deg);
  }
}

.mySlides {
  display: none;
}

.full-width-div {
  width: 100vw;
  position: relative;
  margin-left: -50vw;
  margin-top: 50px;
  margin-bottom: 50px;
  left: 50%;
  padding-top: 50px;
}
.white-text {
  color: white !important;
}

.white-bg {
  background-color: white !important;
}
.black-text {
  color: black !important;
}

.black-bg {
  background-color: black !important;
}

.fancyBorder:hover {
  /* border: 5px solid grey; */
  /* border-style: dotted;
    border-radius:10px;
    border-spacing: 20px; */
  border-radius: 10px;
  text-decoration: none !important;
  padding: 10px;
}
.intro-text {
  /* padding-top: 15vh; */
  color: white;
  animation-name: fadeup;
  animation-duration: 2s;
}

/* Introduction Animation and Other Animations */
span {
  opacity: 0;
  transition: all 1s ease;
  transform: translateY(1vh);
  display: inline-block;
}

.fadein {
  opacity: 1 !important;
  transform: translateY(0vh);
}

@keyframes fadeup {
  from {
    opacity: 0;
    transition: all 1s ease;
    transform: translateY(0px);
  }
  to {
    opacity: 1;
    transform: translateY(5px);
  }
}

@keyframes fadeInAnimation {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.tag {
  opacity: 0;
  transform: translate(0, 10vh);
  transition: all 1s;
}

.tag.visible {
  opacity: 1;
  transform: translate(0, 0);
}

/* for image grid */

.row1 {
  display: -ms-flexbox; /* IE10 */
  display: flex;
  -ms-flex-wrap: wrap; /* IE10 */
  flex-wrap: wrap;
  padding: 0 4px;
}

/* Create four equal columns that sits next to each other */
.column1 {
  -ms-flex: 25%; /* IE10 */
  flex: 25%;
  max-width: 25%;
  padding: 0 4px;
}

.column1 img {
  margin-top: 8px;
  vertical-align: middle;
  width: 100%;
}

/* Responsive layout - makes a two column-layout instead of four columns */
@media screen and (max-width: 800px) {
  .column1 {
    -ms-flex: 50%;
    flex: 50%;
    max-width: 50%;
  }
}

/* Responsive layout - makes the two columns stack on top of each other instead of next to each other */
@media screen and (max-width: 600px) {
  .column1 {
    -ms-flex: 100%;
    flex: 100%;
    max-width: 100%;
  }
}
/* image grid end  */

.rotate {
  animation: rotation 4s infinite linear;
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

.video-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -1;
}

.video-background video {
  position: absolute;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  z-index: -1;
}

/* border line start */

@property --angle {
  syntax: "<angle>";
  initial-value: 90deg;
  inherits: true;
}

@property --gradX {
  syntax: "<percentage>";
  initial-value: 50%;
  inherits: true;
}

@property --gradY {
  syntax: "<percentage>";
  initial-value: 0%;
  inherits: true;
}

:root {
  --d: 2500ms;
  --angle: 90deg;
  --gradX: 100%;
  --gradY: 50%;
  --c1: rgb(255, 255, 255);
  --c2: rgba(0, 0, 0, 0.1);
}

.wrapper {
  min-width: min(40rem, 100%);
}

.box {
  border: 2px solid;
  border-image: conic-gradient(
      from var(--angle),
      var(--c2),
      var(--c1) 0.1turn,
      var(--c1) 0.15turn,
      var(--c2) 0.25turn
    )
    8 / 8px stretch;
  /* -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0); */
  /* -webkit-mask-composite: xor; */
  /* mask-composite: exclude; */
  animation: borderRotate var(--d) linear infinite forwards;
}

.box:nth-child(2) {
  border-image: radial-gradient(
      ellipse at var(--gradX) var(--gradY),
      var(--c1),
      var(--c1) 10%,
      var(--c2) 40%
    )
    30;
  animation: borderRadial var(--d) linear infinite forwards;
}

@keyframes borderRotate {
  100% {
    --angle: 420deg;
  }
}

@keyframes borderRadial {
  20% {
    --gradX: 100%;
    --gradY: 50%;
  }
  40% {
    --gradX: 100%;
    --gradY: 100%;
  }
  60% {
    --gradX: 50%;
    --gradY: 100%;
  }
  80% {
    --gradX: 0%;
    --gradY: 50%;
  }
  100% {
    --gradX: 50%;
    --gradY: 0%;
  }
}
/* border line end */

.bg-image {
  /* Add the blur effect */
  filter: blur(8px);
  -webkit-filter: blur(8px);
}

/* Position text in the middle of the page/image */
.bg-text {
  background-color: rgb(0, 0, 0); /* Fallback color */
  background-color: rgba(0, 0, 0, 0.4); /* Black w/opacity/see-through */
}
/* Style the tabz */
.tabz {
  overflow: hidden;
  border-radius: 5px;
  border: 1px solid #ccc;
  display: inline-block;
}

/* Style the buttons inside the tabz */
.tabz button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px 0px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tabz button:hover {
  background-color: #ddd;
}

/* Create an active/current tabzlink class */
.tabz button.active {
  background-color: #ccc;
}

/* Style the tabz content */
.tabzcontent {
  display: none;
  border-top: none;
}

/* For running strip */
.running-strip {
  width: 100%; 
  height: 50px;
  overflow: hidden;
  background-color: #eee;
  position: relative;
}

.strip-content {
  display: flex;
  animation: scroller 30s linear infinite;
}

@keyframes scroller {
  from { transform: translateX(0); }
  to { transform: translateX(-100%); }
}